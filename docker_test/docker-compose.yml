version: '3.8'


services:
  transcendence_front:
    depends_on: 
     - transcendence_back
    build:
      context: ./front
     args:
       BASE_URL: ${BASE_URL}
       SOCKET_URL: ${SOCKET_URL}
       API42_CLIENT_ID: ${API42_CLIENT_ID}
    container_name: "transcendence_front"
    ports:
      - "3000:3000"
    networks:
      - transcendence_network
    restart: always

  transcendence_back:
    depends_on: 
     - transcendence_db
    build:
      context: ./back
      args:
        PORT: ${PORT}
        ACCESS_SECRET: ${ACCESS_SECRET}
        REFRESH_SECRET: ${REFRESH_SECRET}
        API42_AUTH_REDIRECT: ${API42_AUTH_REDIRECT}
        API42_CLIENT_ID: ${API42_CLIENT_ID}
        API42_CLIENT_SECRET: ${API42_CLIENT_SECRET}
        POSTGRES_HOST: ${POSTGRES_HOST}
        POSTGRES_PORT: ${POSTGRES_PORT}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_NAME: ${POSTGRES_NAME}
   container_name: "transcendence_back"
    networks:
     - transcendence_network
    restart: always

  transcendence_db:
    build: 
      context: ./postgres
      args:
        POSTGRES_HOST: ${POSTGRES_HOST}
        POSTGRES_PORT: ${POSTGRES_PORT}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_NAME: ${POSTGRES_NAME}    
    container_name: "transcendence_db"
    networks:
      - transcendence_network
    # volumes:
    # - transcendence_database:/var/lib/mysql
    restart: always



networks:
  inception_network:
      name: transcendence_network


# volumes:
#   transcendence_database:
#     name: transcendence_database
#     driver: local
#     driver_opts:
#       device: /home/kzennoun/data/transcendence_volumes/transcendence_database
#       o: bind
#       type: none